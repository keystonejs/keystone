"""
 A keystone list
"""
type Todo {
  id: ID!
  title: String
}

input TodoWhereInput {
  AND: [TodoWhereInput]
  OR: [TodoWhereInput]
  id: ID
  id_not: ID
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID]
  id_not_in: [ID]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
}

input TodoWhereUniqueInput {
  id: ID!
}

enum SortTodosBy {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
}

input TodoUpdateInput {
  title: String
}

input TodosUpdateInput {
  id: ID!
  data: TodoUpdateInput
}

input TodoCreateInput {
  title: String
}

input TodosCreateInput {
  data: TodoCreateInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type _ListAccess {
  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'create' operations.
  NOTE: 'create' can only return a Boolean.
  It is not possible to specify a declarative Where clause for this
  operation
  """
  create: Boolean

  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'read' operations.
  """
  read: JSON

  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'update' operations.
  """
  update: JSON

  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'delete' operations.
  """
  delete: JSON

  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'auth' operations.
  """
  auth: JSON
}

type _ListQueries {
  """
  Single-item query name
  """
  item: String

  """
  All-items query name
  """
  list: String

  """
  List metadata query name
  """
  meta: String
}

type _ListMutations {
  """
  Create mutation name
  """
  create: String

  """
  Create many mutation name
  """
  createMany: String

  """
  Update mutation name
  """
  update: String

  """
  Update many mutation name
  """
  updateMany: String

  """
  Delete mutation name
  """
  delete: String

  """
  Delete many mutation name
  """
  deleteMany: String
}

type _ListInputTypes {
  """
  Input type for matching multiple items
  """
  whereInput: String

  """
  Input type for matching a unique item
  """
  whereUniqueInput: String

  """
  Create mutation input type name
  """
  createInput: String

  """
  Create many mutation input type name
  """
  createManyInput: String

  """
  Update mutation name input
  """
  updateInput: String

  """
  Update many mutation name input
  """
  updateManyInput: String
}

type _ListSchemaFields {
  """
  The path of the field in its list
  """
  path: String

  """
  The name of the field in its list
  """
  name: String @deprecated(reason: "Use `path` instead")

  """
  The field type (ie, Checkbox, Text, etc)
  """
  type: String
}

type _ListSchemaRelatedFields {
  """
  The typename as used in GraphQL queries
  """
  type: String

  """
  A list of GraphQL field names
  """
  fields: [String]
}

type _ListSchema {
  """
  The typename as used in GraphQL queries
  """
  type: String

  """
  Top level GraphQL query names which either return this type, or
  provide aggregate information about this type
  """
  queries: _ListQueries

  """
  Top-level GraphQL mutation names
  """
  mutations: _ListMutations

  """
  Top-level GraphQL input types
  """
  inputTypes: _ListInputTypes

  """
  Information about fields defined on this list
  """
  fields(where: _ListSchemaFieldsInput): [_ListSchemaFields]

  """
  Information about fields on other types which return this type, or
  provide aggregate information about this type
  """
  relatedFields: [_ListSchemaRelatedFields]
}

type _ListMeta {
  """
  The Keystone list key
  """
  key: String

  """
  The Keystone List name
  """
  name: String @deprecated(reason: "Use `key` instead")

  """
  The list's user-facing description
  """
  description: String

  """
  The list's display name in the Admin UI
  """
  label: String

  """
  The list's singular display name
  """
  singular: String

  """
  The list's plural display name
  """
  plural: String

  """
  The list's data path
  """
  path: String

  """
  Access control configuration for the currently authenticated request
  """
  access: _ListAccess

  """
  Information on the generated GraphQL schema
  """
  schema: _ListSchema
}

type _QueryMeta {
  count: Int
}

input _ksListsMetaInput {
  key: String

  """
  Whether this is an auxiliary helper list
  """
  auxiliary: Boolean
}

input _ListSchemaFieldsInput {
  type: String
}

type Mutation {
  """
   Create a single Todo item.
  """
  createTodo(data: TodoCreateInput): Todo

  """
   Create multiple Todo items.
  """
  createTodos(data: [TodosCreateInput]): [Todo]

  """
   Update a single Todo item by ID.
  """
  updateTodo(id: ID!, data: TodoUpdateInput): Todo

  """
   Update multiple Todo items by ID.
  """
  updateTodos(data: [TodosUpdateInput]): [Todo]

  """
   Delete a single Todo item by ID.
  """
  deleteTodo(id: ID!): Todo

  """
   Delete multiple Todo items by ID.
  """
  deleteTodos(ids: [ID!]): [Todo]
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

type Query {
  """
   Search for all Todo items which match the where clause.
  """
  allTodos(
    where: TodoWhereInput
    search: String
    sortBy: [SortTodosBy!]
    orderBy: String
    first: Int
    skip: Int
  ): [Todo]

  """
   Search for the Todo item with the matching ID.
  """
  Todo(where: TodoWhereUniqueInput!): Todo

  """
   Perform a meta-query on all Todo items which match the where clause.
  """
  _allTodosMeta(
    where: TodoWhereInput
    search: String
    sortBy: [SortTodosBy!]
    orderBy: String
    first: Int
    skip: Int
  ): _QueryMeta

  """
   Retrieve the meta-data for the Todo list.
  """
  _TodosMeta: _ListMeta

  """
   Retrieve the meta-data for all lists.
  """
  _ksListsMeta(where: _ksListsMetaInput): [_ListMeta]
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  enableSignout: Boolean!
  enableSessionItem: Boolean!
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  isOrderable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID!): KeystoneAdminUIFieldMetaItemView
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode!
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
