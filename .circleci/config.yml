# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

x-job-setup: &job-setup
  docker:
    # specify the version you desire here
    - image: circleci/node:carbon-browsers
    - image: mongo:3.4.4

  working_directory: /home/circleci/repo

# Download and cache dependencies
x-restore-cache: &restore-cache
  keys:
    - v7-dependencies-{{ checksum "yarn.lock" }}
      # fallback to using the latest cache if no exact match is found
    - v7-dependencies-

x-save-cache: &save-cache
  paths:
    - node_modules
  key: v7-dependencies-{{ checksum "yarn.lock" }}

x-integration-steps: &integration-steps
  steps:
    - checkout
    - restore_cache: *restore-cache
    - run: sudo yarn global add bolt
    - run:
        name: Bolt - Install packages
        command: CYPRESS_CACHE_FOLDER=$CIRCLE_WORKING_DIRECTORY/node_modules/cypress/.cache/ bolt
    - save_cache: *save-cache
    - run:
        name: E2E Cypress tests
        command: CYPRESS_CACHE_FOLDER=$CIRCLE_WORKING_DIRECTORY/node_modules/cypress/.cache/ bolt ws run cypress:run:ci --only-fs $PROJECT_DIRECTORY
    - run:
        name: Prepare artifacts
        command: |
          mv "$PROJECT_DIRECTORY"/cypress/{videos,screenshots} /tmp || true
        when: always
    - run:
        name: Prepare reports
        command: |
          cd "$PROJECT_DIRECTORY"
          [ -d cypress/reports ] && `yarn bin`/junit-merge -d cypress/reports -C -o /tmp/reports/cypress/report.xml || true
        when: always
    - store_test_results:
        path: /tmp/reports
    - store_artifacts:
        path: /tmp/reports
    - store_artifacts:
        path: /tmp/videos
    - store_artifacts:
        path: /tmp/screenshots

jobs:
  simple_tests:
    <<: *job-setup
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: sudo yarn global add bolt
      - run: bolt
      - save_cache: *save-cache
      # run tests!
      - run: yarn lint:eslint --format junit -o reports/junit/js-lint-results.xml
      - run: yarn lint:prettier
      - run:
          name: Unit tests
          command: yarn jest --ci --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  integration_tests_basic:
    environment:
      PROJECT_DIRECTORY: projects/basic
      CLOUDINARY_CLOUD_NAME: $CLOUDINARY_CLOUD_NAME
      CLOUDINARY_KEY: $CLOUDINARY_KEY
      CLOUDINARY_SECRET: $CLOUDINARY_SECRET
      PORT: 3000
    <<: *job-setup
    <<: *integration-steps

  integration_tests_login:
    environment:
      PROJECT_DIRECTORY: projects/login
      PORT: 3000
    <<: *job-setup
    <<: *integration-steps

  integration_tests_accesscontrol:
    environment:
      PROJECT_DIRECTORY: projects/access-control
      PORT: 3000
    <<: *job-setup
    <<: *integration-steps

  integration_tests_twitterlogin:
    environment:
      PROJECT_DIRECTORY: projects/twitter-login
      PORT: 3000
    <<: *job-setup
    <<: *integration-steps

workflows:
  version: 2
  tests:
    jobs:
      - simple_tests
      - integration_tests_basic
      - integration_tests_login
      - integration_tests_twitterlogin
      - integration_tests_accesscontrol
