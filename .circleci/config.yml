# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

x-job-setup: &job-setup
  docker:
    # specify the version you desire here
    - image: circleci/node:dubnium-browsers
      environment:
        TEST_DATABASE_URL: postgresql://root@localhost/circle_test
        DATABASE_URL: 'postgres://keystone5:k3yst0n3@localhost:5432/circle_test'
        NODE_OPTIONS: --max_old_space_size=4096
    - image: mongo:4.0.0
    - image: circleci/postgres:9.6.5-alpine-ram

  working_directory: /home/circleci/repo

# Download and cache dependencies
x-restore-cache: &restore-cache
  keys:
    - v15-dependencies-{{ checksum "yarn.lock" }}
      # fallback to using the latest cache if no exact match is found
    - v15-dependencies-

x-save-cache: &save-cache
  paths:
    - node_modules
  key: v15-dependencies-{{ checksum "yarn.lock" }}

x-integration-steps: &integration-steps
  steps:
    - checkout
    - run:
        name: Yarn - Install packages
        command: CYPRESS_CACHE_FOLDER=$CIRCLE_WORKING_DIRECTORY/node_modules/cypress/.cache/ yarn
    - save_cache: *save-cache
    - run:
        name: 'Is test required'
        command: node ./.circleci/run-or-bail.js
    - run:
        name: E2E Cypress tests
        command: CYPRESS_CACHE_FOLDER=$CIRCLE_WORKING_DIRECTORY/node_modules/cypress/.cache/ yarn --cwd $PROJECT_DIRECTORY cypress:run:ci
    - run:
        name: Prepare artifacts
        command: |
          mv "$PROJECT_DIRECTORY"/cypress/{videos,screenshots} /tmp || true
        when: always
    - run:
        name: Prepare reports
        command: |
          cd "$PROJECT_DIRECTORY"
          [ -d cypress/reports ] && `yarn bin`/junit-merge -d cypress/reports -C -o /tmp/reports/cypress/report.xml || true
        when: always
    - store_test_results:
        path: /tmp/reports
    - store_artifacts:
        path: /tmp/reports
    - store_artifacts:
        path: /tmp/videos
    - store_artifacts:
        path: /tmp/screenshots

x-simple-tests: &simple-tests
  steps:
    - checkout
    # Set Cypress cache dir here, in case this job runs/completes first, and
    # hence clobbers the `node_modules` cache with a non-cypress version,
    # causing the other job to fail with a "Missing Cypress" error.
    - run: CYPRESS_CACHE_FOLDER=$CIRCLE_WORKING_DIRECTORY/node_modules/cypress/.cache/ yarn
    - save_cache: *save-cache
    - run: yarn lint:eslint --format junit -o reports/junit/js-lint-results.xml
    - run: yarn lint:prettier
    - run: yarn lint:markdown
    - run:
        name: 'Is test required'
        command: node ./.circleci/run-or-bail.js
    - run: sudo apt-get update
    - run: sudo apt-get install postgresql-client-9.6
    - run: psql -d $TEST_DATABASE_URL -c "CREATE SCHEMA keystone;"
    - run: psql -d $TEST_DATABASE_URL -c "CREATE USER keystone5 PASSWORD 'k3yst0n3';"
    - run: psql -d $TEST_DATABASE_URL -c "GRANT ALL ON SCHEMA keystone TO keystone5;"
    # run tests!
    - run:
        name: Unit tests
        command: yarn jest --ci --reporters=default --reporters=jest-junit --maxWorkers=1
        environment:
          JEST_JUNIT_OUTPUT: 'reports/junit/js-test-results.xml'
    - store_test_results:
        path: reports/junit
    - store_artifacts:
        path: reports/junit

jobs:
  simple_tests:
    <<: *job-setup
    <<: *restore-cache
    <<: *simple-tests

  integration_tests_basic:
    environment:
      PROJECT_DIRECTORY: test-projects/basic
      CLOUDINARY_CLOUD_NAME: $CLOUDINARY_CLOUD_NAME
      CLOUDINARY_KEY: $CLOUDINARY_KEY
      CLOUDINARY_SECRET: $CLOUDINARY_SECRET
      PORT: 3000
    <<: *job-setup
    <<: *restore-cache
    <<: *integration-steps

  integration_tests_login:
    environment:
      PROJECT_DIRECTORY: test-projects/login
      PORT: 3000
    <<: *job-setup
    <<: *restore-cache
    <<: *integration-steps

  integration_tests_accesscontrol:
    environment:
      PROJECT_DIRECTORY: test-projects/access-control
      PROJECT_NAME: 'Cypress Test Project For Access Control'
      PORT: 3000
    <<: *job-setup
    <<: *restore-cache
    <<: *integration-steps

  integration_tests_clientvalidation:
    environment:
      PROJECT_DIRECTORY: test-projects/client-validation
      PROJECT_NAME: 'Cypress Test Project For Client Validation'
      PORT: 3000
    <<: *job-setup
    <<: *restore-cache
    <<: *integration-steps

  # integration_tests_twitterlogin:
  #   environment:
  #     PROJECT_DIRECTORY: test-projects/twitter-login
  #     PORT: 3000
  #   <<: *job-setup
  #   <<: *integration-steps

workflows:
  version: 2
  tests:
    jobs:
      - simple_tests
      - integration_tests_basic
      - integration_tests_login
      # - integration_tests_twitterlogin
      - integration_tests_accesscontrol
      - integration_tests_clientvalidation
