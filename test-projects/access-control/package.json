{
  "name": "@keystone-alpha/cypress-project-access-control",
  "description": "A KeystoneJS demo project for integration testing. See @keystone-alpha/keystone for more.",
  "private": true,
  "version": "1.0.9",
  "author": "The KeystoneJS Development Team",
  "license": "MIT",
  "engines": {
    "node": ">=8.4.0"
  },
  "scripts": {
    "start": "node -r dotenv-safe/config server.js | sed -l -e 's/:\\s*undefined\\s*,/:null,/g' | tee out.log | pino-colada",
    "cypress:run:cmd": "node -r dotenv-safe/config `which cypress` run",
    "cypress:open:cmd": "node -r dotenv-safe/config `which cypress` open",
    "prepare-test-server": "NODE_ENV=test DISABLE_LOGGING=true node -r dotenv-safe/config -e 'require(`execa`)(`start-server-and-test`, [`start`, `http-get://localhost:${process.env.PORT}/admin`, process.argv[1]], { stdio: `inherit` }).catch(error => { console.error(error.toString()); process.exit(error.code) })'",
    "cypress:run:ci": "touch .env && yarn prepare-test-server cypress:run:cmd",
    "cypress:run": "if [ -f .env ]; then yarn prepare-test-server cypress:run:cmd; else echo \"\nError: Must create a test-projects/access-control/.env file.\nSee test-projects/access-control/.env.example for values\n\"; exit 1; fi",
    "cypress:open": "if [ -f .env ]; then yarn prepare-test-server cypress:open:cmd; else echo \"\nError: Must create a test-projects/access-control/.env file.\nSee test-projects/access-control/.env.example for values\n\"; exit 1; fi"
  },
  "dependencies": {
    "@keystone-alpha/adapter-mongoose": "^2.0.0",
    "@keystone-alpha/app-admin": "^3.2.1",
    "@keystone-alpha/fields": "^6.1.1",
    "@keystone-alpha/keystone": "^4.0.0",
    "@keystone-alpha/utils": "^3.0.0",
    "express": "^4.16.3"
  },
  "devDependencies": {
    "cypress": "^3.2.0",
    "dotenv-safe": "^6.0.0",
    "execa": "1.0.0",
    "mocha": "^5.2.0",
    "mocha-junit-reporter": "^1.21.0",
    "mocha-multi-reporters": "^1.1.7",
    "pino-colada": "^1.4.4",
    "start-server-and-test": "^1.7.13"
  }
}
