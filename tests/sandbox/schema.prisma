// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/myprisma"
}

model Thing {
  id                                String    @id @default(cuid())
  text                              String    @default("")
  timestamp                         DateTime?
  structure                         Json      @default("{\"integer\":0,\"array\":[]}")
  structureNested                   Json      @default("[]")
  structureRelationships            Json      @default("[]")
  checkbox                          Boolean   @default(false)
  password                          String?
  toOneRelationship                 User?     @relation("Thing_toOneRelationship", fields: [toOneRelationshipId], references: [id])
  toOneRelationshipId               String?   @map("toOneRelationship")
  toOneRelationshipAlternateLabel   User?     @relation("Thing_toOneRelationshipAlternateLabel", fields: [toOneRelationshipAlternateLabelId], references: [id])
  toOneRelationshipAlternateLabelId String?   @map("toOneRelationshipAlternateLabel")
  toManyRelationship                Todo[]    @relation("Thing_toManyRelationship")
  toOneRelationshipCard             User?     @relation("Thing_toOneRelationshipCard", fields: [toOneRelationshipCardId], references: [id])
  toOneRelationshipCardId           String?   @map("toOneRelationshipCard")
  toManyRelationshipCard            Todo[]    @relation("Thing_toManyRelationshipCard")
  calendarDay                       DateTime? @postgresql.Date
  select                            String?
  selectOnSide                      String?
  selectOnSideItemViewOnly          String?
  selectSegmentedControl            String?
  multiselect                       Json      @default("[]")
  json                              Json?
  integer                           Int?
  decimal                           Decimal?  @postgresql.Decimal(32, 8)
  bigInt                            BigInt?   @unique
  float                             Float?
  image_id                          String?
  image_filesize                    Int?
  image_width                       Int?
  image_height                      Int?
  image_extension                   String?
  file_filesize                     Int?
  file_filename                     String?
  document                          Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")

  @@index([toOneRelationshipId])
  @@index([toOneRelationshipAlternateLabelId])
  @@index([toOneRelationshipCardId])
}

model Todo {
  id                                String    @id @default(cuid())
  label                             String    @default("")
  isComplete                        Boolean   @default(false)
  assignedTo                        User?     @relation("Todo_assignedTo", fields: [assignedToId], references: [id])
  assignedToId                      String?   @map("assignedTo")
  finishBy                          DateTime?
  createdAt                         DateTime  @default(now())
  updatedAt                         DateTime  @updatedAt
  from_Thing_toManyRelationship     Thing[]   @relation("Thing_toManyRelationship")
  from_Thing_toManyRelationshipCard Thing[]   @relation("Thing_toManyRelationshipCard")

  @@index([assignedToId])
}

model User {
  id                                         String   @id @default(cuid())
  name                                       String   @default("")
  email                                      String   @default("")
  password                                   String?
  tasks                                      Todo[]   @relation("Todo_assignedTo")
  createdAt                                  DateTime @default(now())
  updatedAt                                  DateTime @updatedAt
  from_Thing_toOneRelationship               Thing[]  @relation("Thing_toOneRelationship")
  from_Thing_toOneRelationshipAlternateLabel Thing[]  @relation("Thing_toOneRelationshipAlternateLabel")
  from_Thing_toOneRelationshipCard           Thing[]  @relation("Thing_toOneRelationshipCard")
}

model Settings {
  id            Int     @id
  websiteName   String  @default("")
  copyrightText String  @default("")
  something     BigInt? @unique
}
