// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Thing {
  id                      String    @id @default(cuid())
  checkbox                Boolean   @default(false)
  password                String?
  toOneRelationship       User?     @relation("Thing_toOneRelationship", fields: [toOneRelationshipId], references: [id])
  toOneRelationshipId     String?   @map("toOneRelationship")
  toManyRelationship      Todo[]    @relation("Thing_toManyRelationship")
  toOneRelationshipCard   User?     @relation("Thing_toOneRelationshipCard", fields: [toOneRelationshipCardId], references: [id])
  toOneRelationshipCardId String?   @map("toOneRelationshipCard")
  toManyRelationshipCard  Todo[]    @relation("Thing_toManyRelationshipCard")
  text                    String    @default("")
  timestamp               DateTime?
  calendarDay             String?
  select                  String?
  selectSegmentedControl  String?
  json                    String?
  integer                 Int?
  bigInt                  BigInt?
  float                   Float?
  image_filesize          Int?
  image_extension         String?
  image_width             Int?
  image_height            Int?
  image_id                String?
  file_filesize           Int?
  file_filename           String?
  document                String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")

  @@index([toOneRelationshipId])
  @@index([toOneRelationshipCardId])
}

model Todo {
  id                                String    @id @default(cuid())
  label                             String    @default("")
  isComplete                        Boolean   @default(false)
  assignedTo                        User?     @relation("Todo_assignedTo", fields: [assignedToId], references: [id])
  assignedToId                      String?   @map("assignedTo")
  finishBy                          DateTime?
  createdAt                         DateTime  @default(now())
  updatedAt                         DateTime  @updatedAt
  from_Thing_toManyRelationship     Thing[]   @relation("Thing_toManyRelationship")
  from_Thing_toManyRelationshipCard Thing[]   @relation("Thing_toManyRelationshipCard")

  @@index([assignedToId])
}

model User {
  id                               String   @id @default(cuid())
  name                             String   @default("")
  email                            String   @default("")
  password                         String?
  tasks                            Todo[]   @relation("Todo_assignedTo")
  createdAt                        DateTime @default(now())
  updatedAt                        DateTime @updatedAt
  from_Thing_toOneRelationship     Thing[]  @relation("Thing_toOneRelationship")
  from_Thing_toOneRelationshipCard Thing[]  @relation("Thing_toOneRelationshipCard")
}