# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type Post {
  id: ID!
  title: String
  content: String
  hidden: Boolean
  votes: Int
  reportedAt: DateTime
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input PostWhereUniqueInput {
  id: ID
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  id: IDFilter
  title: StringFilter
  content: StringFilter
  hidden: BooleanFilter
  votes: IntNullableFilter
  reportedAt: DateTimeNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input PostOrderByInput {
  id: OrderDirection
  title: OrderDirection
  content: OrderDirection
  hidden: OrderDirection
  votes: OrderDirection
  reportedAt: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input PostUpdateInput {
  title: String
  content: String
  hidden: Boolean
  votes: Int
  reportedAt: DateTime
}

input PostUpdateArgs {
  where: PostWhereUniqueInput!
  data: PostUpdateInput!
}

input PostCreateInput {
  title: String
  content: String
  hidden: Boolean
  votes: Int
  reportedAt: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createPost(data: PostCreateInput!): Post
  createPosts(data: [PostCreateInput!]!): [Post]
  updatePost(where: PostWhereUniqueInput!, data: PostUpdateInput!): Post
  updatePosts(data: [PostUpdateArgs!]!): [Post]
  deletePost(where: PostWhereUniqueInput!): Post
  deletePosts(where: [PostWhereUniqueInput!]!): [Post]
  votePost(where: PostWhereUniqueInput!): Post
  votePosts(where: [PostWhereUniqueInput!]!): [Post]
  reportAPost(where: PostWhereUniqueInput!): Post
  reportSomePosts(where: [PostWhereUniqueInput!]!): [Post]
}

type Query {
  post(where: PostWhereUniqueInput!): Post
  posts(where: PostWhereInput! = {}, orderBy: [PostOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PostWhereUniqueInput): [Post!]
  postsCount(where: PostWhereInput! = {}): Int
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!, itemId: ID): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  label: String!
  singular: String!
  plural: String!
  path: String!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  actions: [KeystoneAdminUIActionMeta!]!
  graphql: KeystoneAdminUIGraphQL!
  pageSize: Int!
  initialColumns: [String!]!
  initialSearchFields: [String!]!
  initialSort: KeystoneAdminUISort
  initialFilter: JSON
  isSingleton: Boolean!
  hideNavigation: Boolean!
  hideCreate: Boolean!
  hideDelete: Boolean!
}

type KeystoneAdminUIFieldMeta {
  key: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  itemView: KeystoneAdminUIFieldMetaItemView
  listView: KeystoneAdminUIFieldMetaListView!
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: JSON!
  isRequired: JSON!
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: JSON!
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition!
  isRequired: JSON!
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUIActionMeta {
  key: String!
  label: String!
  icon: String
  messages: KeystoneAdminUIActionMetaMessages!
  graphql: KeystoneAdminUIActionMetaGraphQL
  itemView: KeystoneAdminUIActionMetaItemView
  listView: KeystoneAdminUIActionMetaListView!
}

type KeystoneAdminUIActionMetaMessages {
  promptTitle: String!
  promptTitleMany: String
  prompt: String!
  promptMany: String
  promptConfirmLabel: String!
  promptConfirmLabelMany: String
  fail: String!
  failMany: String
  success: String!
  successMany: String
}

type KeystoneAdminUIActionMetaGraphQL {
  names: KeystoneAdminUIActionMetaGraphQLNames!
}

type KeystoneAdminUIActionMetaGraphQLNames {
  one: String!
  many: String
}

type KeystoneAdminUIActionMetaItemView {
  actionMode: JSON!
  navigation: KeystoneAdminUIActionMetaItemViewNavigation!
  hidePrompt: Boolean!
  hideToast: Boolean!
}

enum KeystoneAdminUIActionMetaItemViewNavigation {
  follow
  refetch
  return
}

type KeystoneAdminUIActionMetaListView {
  actionMode: KeystoneAdminUIActionMetaListViewActionMode!
}

enum KeystoneAdminUIActionMetaListViewActionMode {
  enabled
  hidden
}

type KeystoneAdminUIGraphQL {
  names: KeystoneAdminUIGraphQLNames!
}

type KeystoneAdminUIGraphQLNames {
  outputTypeName: String!
  whereInputName: String!
  whereUniqueInputName: String!
  createInputName: String!
  createMutationName: String!
  createManyMutationName: String!
  relateToOneForCreateInputName: String!
  relateToManyForCreateInputName: String!
  itemQueryName: String!
  listOrderName: String!
  listQueryCountName: String!
  listQueryName: String!
  updateInputName: String!
  updateMutationName: String!
  updateManyInputName: String!
  updateManyMutationName: String!
  relateToOneForUpdateInputName: String!
  relateToManyForUpdateInputName: String!
  deleteMutationName: String!
  deleteManyMutationName: String!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
