# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type Example {
  id: ID!
  bigInt: BigInt
  bigIntDefaulted: BigInt
  float: Float
  floatDefaulted: Float
  integer: Int
  integerDefaulted: Int
  maximum: Int
}

scalar BigInt

input ExampleWhereUniqueInput {
  id: ID
}

input ExampleWhereInput {
  AND: [ExampleWhereInput!]
  OR: [ExampleWhereInput!]
  NOT: [ExampleWhereInput!]
  id: IDFilter
  bigInt: BigIntNullableFilter
  bigIntDefaulted: BigIntNullableFilter
  float: FloatNullableFilter
  floatDefaulted: FloatNullableFilter
  integer: IntNullableFilter
  integerDefaulted: IntNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input BigIntNullableFilter {
  equals: BigInt
  in: [BigInt!]
  notIn: [BigInt!]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: BigIntNullableFilter
}

input FloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: FloatNullableFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input ExampleOrderByInput {
  id: OrderDirection
  bigInt: OrderDirection
  bigIntDefaulted: OrderDirection
  float: OrderDirection
  floatDefaulted: OrderDirection
  integer: OrderDirection
  integerDefaulted: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input ExampleUpdateInput {
  bigInt: BigInt
  bigIntDefaulted: BigInt
  float: Float
  floatDefaulted: Float
  integer: Int
  integerDefaulted: Int
}

input ExampleUpdateArgs {
  where: ExampleWhereUniqueInput!
  data: ExampleUpdateInput!
}

input ExampleCreateInput {
  bigInt: BigInt
  bigIntDefaulted: BigInt
  float: Float
  floatDefaulted: Float
  integer: Int
  integerDefaulted: Int
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createExample(data: ExampleCreateInput!): Example
  createExamples(data: [ExampleCreateInput!]!): [Example]
  updateExample(where: ExampleWhereUniqueInput!, data: ExampleUpdateInput!): Example
  updateExamples(data: [ExampleUpdateArgs!]!): [Example]
  deleteExample(where: ExampleWhereUniqueInput!): Example
  deleteExamples(where: [ExampleWhereUniqueInput!]!): [Example]
}

type Query {
  example(where: ExampleWhereUniqueInput!): Example
  examples(where: ExampleWhereInput! = {}, orderBy: [ExampleOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ExampleWhereUniqueInput): [Example!]
  examplesCount(where: ExampleWhereInput! = {}): Int
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  path: String!
  description: String
  label: String!
  labelField: String!
  singular: String!
  plural: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  graphql: KeystoneAdminUIGraphQL!
  pageSize: Int!
  initialColumns: [String!]!
  initialSearchFields: [String!]!
  initialSort: KeystoneAdminUISort
  isSingleton: Boolean!
  hideNavigation: Boolean!
  hideCreate: Boolean!
  hideDelete: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUIGraphQL {
  names: KeystoneAdminUIGraphQLNames!
}

type KeystoneAdminUIGraphQLNames {
  outputTypeName: String!
  whereInputName: String!
  whereUniqueInputName: String!
  createInputName: String!
  createMutationName: String!
  createManyMutationName: String!
  relateToOneForCreateInputName: String!
  relateToManyForCreateInputName: String!
  itemQueryName: String!
  listOrderName: String!
  listQueryCountName: String!
  listQueryName: String!
  updateInputName: String!
  updateMutationName: String!
  updateManyInputName: String!
  updateManyMutationName: String!
  relateToOneForUpdateInputName: String!
  relateToManyForUpdateInputName: String!
  deleteMutationName: String!
  deleteManyMutationName: String!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
